{"version":3,"sources":["components/Login.js","hooks/useLocalStorage.js","contexts/ContactsProvider.js","contexts/SocketProvider.js","contexts/ConversationsProvider.js","components/Conversations.js","components/Contacts.js","components/NewContactModal.js","components/NewConversationModal.js","components/Sidebar.js","components/OpenConversation.js","components/Dashboard.js","components/App.js","index.js"],"names":["Login","onIdSubmit","darkMode","idRef","useRef","bg","background","bgForm","padding","text","color","inputText","style","Container","className","height","Form","onSubmit","e","preventDefault","current","value","Group","Label","Control","type","ref","required","Button","variant","onClick","uuidV4","useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","ContactsContext","React","createContext","useContacts","useContext","ContactsProvider","children","contacts","setContacts","Provider","createContact","id","name","prevContacts","SocketContext","SocketProvider","socket","setSocket","newSocket","io","query","close","ConversationsContext","useConversations","ConversationsProvider","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","addMessageToConversation","useCallback","recipients","sender","prevConversations","madeChange","newMessage","newConversations","map","conversation","a","b","length","sort","every","element","index","messages","on","off","formattedConversations","recipient","contact","find","message","fromMe","senderName","selected","selectedConversation","sendMessage","emit","selectConversationIndex","createConversation","Conversations","ListGroup","Item","action","active","r","join","Contacts","NewContactModal","closeModal","nameRef","Modal","Header","closeButton","Body","NewConversationModal","selectedContactIds","setSelectedContactIds","controlId","Check","includes","label","onChange","contactId","prevSelectedContactIds","filter","prevId","Sidebar","activeKey","setActiveKey","modalOpen","setModalOpen","conversationsOpen","sideBg","width","Tab","onSelect","Nav","Link","eventKey","Content","Pane","show","onHide","OpenConversation","setText","setRef","node","scrollIntoView","smooth","textStyling","resize","oMsgText","meMsgText","lastMessage","InputGroup","as","target","Append","Dashboard","App","setId","setDarkMode","dashboard","ncolor","fontSize","marginBottom","listStyle","marginLeft","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42fa6f4e.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { v4 as uuidV4 } from 'uuid'\n\nexport default function Login({ onIdSubmit,darkMode }) {\n  const idRef = useRef()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    onIdSubmit(idRef.current.value)\n  }\n\n  function createNewId() {\n    onIdSubmit(uuidV4())\n  }\n  const bg={background:`${darkMode?'url(\"https://wallpapercave.com/wp/wp8092590.jpg\")':'url(\"https://64.media.tumblr.com/53a35e7ed66f3159e01f3663af30706b/tumblr_ouztgbH0CG1vj8v9mo1_400.png\")'}`}\n\n  const bgForm={background:`${darkMode?'grey':'#d5e1df'}`,padding:'50px'}\n\n  const text={color:`${darkMode?'white':'black'}`}\n\n  const inputText={color:`${darkMode?'white':'black'}`,background:`${darkMode?'black':'white'}`}\n\n  return (\n    <div style={bg}>\n    <Container className=\"align-items-center d-flex\" style={{ height: '100vh'}}>\n      <Form onSubmit={handleSubmit} className=\"w-100\" style={bgForm}>\n        <Form.Group>\n          <Form.Label style={text}>Enter Your Id</Form.Label>\n          <Form.Control type=\"text\" ref={idRef} style={inputText} required />\n        </Form.Group>   \n        <Button type=\"submit\" className=\"mr-2\" variant={`${darkMode?'danger':'primary'}`}>Login</Button>\n        <Button onClick={createNewId} variant={`${darkMode?'dark':'secondary'}`}>Create A New Id</Button>\n      </Form>\n    </Container>\n    </div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'whatsapp-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, { useContext } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n  return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, { id, name }]\n    })\n  }\n\n  return (\n    <ContactsContext.Provider value={{ contacts, createContact }}>\n      {children}\n    </ContactsContext.Provider>\n  )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport io from 'socket.io-client'\n\nconst SocketContext = React.createContext()\n\nexport function useSocket() {\n  return useContext(SocketContext)\n}\n\nexport function SocketProvider({ id, children }) {\n  const [socket, setSocket] = useState()\n\n  useEffect(() => {\n    const newSocket = io(\n      'http://localhost:5000',\n      { query: { id } }\n    )\n    setSocket(newSocket)\n\n    return () => newSocket.close()\n  }, [id])\n\n  return (\n    <SocketContext.Provider value={socket}>\n      {children}\n    </SocketContext.Provider>\n  )\n}\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { useContacts } from './ContactsProvider';\nimport { useSocket } from './SocketProvider';\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations() {\n  return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ id, children }) {\n  const [conversations, setConversations] = useLocalStorage('conversations', [])\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\n  const { contacts } = useContacts()\n  const socket = useSocket()\n\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, { recipients, messages: [] }]\n    })\n  }\n\n  const addMessageToConversation = useCallback(({ recipients, text, sender }) => {\n    setConversations(prevConversations => {\n      let madeChange = false\n      const newMessage = { sender, text }\n      const newConversations = prevConversations.map(conversation => {\n        if (arrayEquality(conversation.recipients, recipients)) {\n          madeChange = true\n          return {\n            ...conversation,\n            messages: [...conversation.messages, newMessage]\n          }\n        }\n\n        return conversation\n      })\n\n      if (madeChange) {\n        return newConversations\n      } else {\n        return [\n          ...prevConversations,\n          { recipients, messages: [newMessage] }\n        ]\n      }\n    })\n  }, [setConversations])\n\n  useEffect(() => {\n    if (socket == null) return\n\n    socket.on('receive-message', addMessageToConversation)\n\n    return () => socket.off('receive-message')\n  }, [socket, addMessageToConversation])\n\n  function sendMessage(recipients, text) {\n    socket.emit('send-message', { recipients, text })\n\n    addMessageToConversation({ recipients, text, sender: id })\n  }\n\n  const formattedConversations = conversations.map((conversation, index) => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient\n      })\n      const name = (contact && contact.name) || recipient\n      return { id: recipient, name }\n    })\n\n    const messages = conversation.messages.map(message => {\n      const contact = contacts.find(contact => {\n        return contact.id === message.sender\n      })\n      const name = (contact && contact.name) || message.sender\n      const fromMe = id === message.sender\n      return { ...message, senderName: name, fromMe }\n    })\n    \n    const selected = index === selectedConversationIndex\n    return { ...conversation, messages, recipients, selected }\n  })\n\n  const value = {\n    conversations: formattedConversations,\n    selectedConversation: formattedConversations[selectedConversationIndex],\n    sendMessage,\n    selectConversationIndex: setSelectedConversationIndex,\n    createConversation\n  }\n\n  return (\n    <ConversationsContext.Provider value={value}>\n      {children}\n    </ConversationsContext.Provider>\n  )\n}\n\nfunction arrayEquality(a, b) {\n  if (a.length !== b.length) return false\n\n  a.sort()\n  b.sort()\n\n  return a.every((element, index) => {\n    return element === b[index]\n  })\n}","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function Conversations({darkMode}) {\n  const { conversations, selectConversationIndex } = useConversations()\n\n  return (\n    <div >\n    <ListGroup variant=\"flush\">\n      {conversations.map((conversation, index) => (\n        <ListGroup.Item\n          variant={`${darkMode?'danger':'primary'}`}\n          key={index}\n          action\n          onClick={() => selectConversationIndex(index)}\n          active={conversation.selected}\n        >\n          {conversation.recipients.map(r => r.name).join(', ')}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n    </div>\n  )\n}\n","import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider';\n\nexport default function Contacts({darkMode}) {\n  const { contacts } = useContacts()\n\n  return (\n    <ListGroup variant=\"flush\">\n      {contacts.map(contact => (\n        <ListGroup.Item key={contact.id} variant={`${darkMode?'danger':'primary'}`}>\n          {contact.name}\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n}\n","import React, { useRef } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\n\nexport default function NewContactModal({ closeModal }) {\n  const idRef = useRef()\n  const nameRef = useRef()\n  const { createContact } = useContacts()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    createContact(idRef.current.value, nameRef.current.value)\n    closeModal()\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Contact</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group>\n            <Form.Label>Id</Form.Label>\n            <Form.Control type=\"text\" ref={idRef} required />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" ref={nameRef} required />\n          </Form.Group>\n          <Button type=\"submit\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Modal, Form, Button } from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function NewConversationModal({ closeModal }) {\n  const [selectedContactIds, setSelectedContactIds] = useState([])\n  const { contacts } = useContacts()\n  const { createConversation } = useConversations()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    createConversation(selectedContactIds)\n    closeModal()\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId\n        })\n      } else {\n        return [...prevSelectedContactIds, contactId]\n      }\n    })\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {contacts.map(contact => (\n            <Form.Group controlId={contact.id} key={contact.id}>\n              <Form.Check\n                type=\"checkbox\"\n                value={selectedContactIds.includes(contact.id)}\n                label={contact.name}\n                onChange={() => handleCheckboxChange(contact.id)}\n              />\n            </Form.Group>\n          ))}\n          <Button type=\"submit\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Tab, Nav, Button, Modal } from 'react-bootstrap'\nimport Conversations from './Conversations'\nimport Contacts from './Contacts'\nimport NewContactModal from './NewContactModal'\nimport NewConversationModal from './NewConversationModal'\n\nconst CONVERSATIONS_KEY = 'conversations'\nconst CONTACTS_KEY = 'contacts'\n\nexport default function Sidebar({ id,darkMode }) {\n  const [activeKey, setActiveKey] = useState(CONVERSATIONS_KEY)\n  const [modalOpen, setModalOpen] = useState(false)\n  const conversationsOpen = activeKey === CONVERSATIONS_KEY\n  \n  function closeModal() {\n    setModalOpen(false)\n  }\n\n  const sideBg={background:`${darkMode?'#685D5D':'#DDDDD8'}`,width:'250px'}\n\n  const text={color:`${darkMode?'white':'black'}`}\n\n  return (\n    <div style={sideBg} className=\"d-flex flex-column\" >\n      <Tab.Container activeKey={activeKey} onSelect={setActiveKey} >\n        <Nav variant=\"tabs\" className=\"justify-content-center\" >\n          <Nav.Item style={{}}>\n            <Nav.Link eventKey={CONVERSATIONS_KEY}>Conversations</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey={CONTACTS_KEY}>Contacts</Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Tab.Content className=\"border-right overflow-auto flex-grow-1\">\n          <Tab.Pane eventKey={CONVERSATIONS_KEY}>\n            <Conversations darkMode={darkMode} />\n          </Tab.Pane>\n          <Tab.Pane eventKey={CONTACTS_KEY}>\n            <Contacts darkMode={darkMode}/>\n          </Tab.Pane>\n        </Tab.Content>\n        <div className=\"p-2 border-top border-right small\" style={text}>\n          Your Id: <span>{id}</span>\n        </div>\n        <Button onClick={() => setModalOpen(true)} className=\"rounded-0\" variant={`${darkMode?'danger':'primary'}`}>\n          New {conversationsOpen ? 'Conversation' : 'Contact'}\n        </Button>\n      </Tab.Container>\n\n      <Modal show={modalOpen} onHide={closeModal}>\n        {conversationsOpen ?\n          <NewConversationModal closeModal={closeModal} /> :\n          <NewContactModal closeModal={closeModal} />\n        }\n      </Modal>\n    </div>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport url from 'socket.io-client/lib/url';\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function OpenConversation({darkMode}) {\n  const [text, setText] = useState('')\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({ smooth: true })\n    }\n  }, [])\n  const { sendMessage, selectedConversation } = useConversations()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    sendMessage(\n      selectedConversation.recipients.map(r => r.id),\n      text\n    )\n    setText('')\n  }\n\n  const textStyling={color:`${darkMode?'white':'black'}`,background:`${darkMode?'grey':'white'}`,height: '75px', resize: 'none'}\n\n  const bg={background:`${darkMode?'url(\"https://wallpapercave.com/wp/wp8092590.jpg\")':'url(\"https://64.media.tumblr.com/53a35e7ed66f3159e01f3663af30706b/tumblr_ouztgbH0CG1vj8v9mo1_400.png\")'}`}\n\n  const oMsgText={color:`${darkMode?'white':'black'}`,background:`${darkMode?'grey':'white'}`}\n\n  const meMsgText={color:`${darkMode?'white':'black'}`,background:`${darkMode?'red':'#81BFE6'}`}\n\n  return (\n    <div className=\"d-flex flex-column flex-grow-1\" style={bg}>\n      <div className=\"flex-grow-1 overflow-auto\">\n        <div className=\"d-flex flex-column align-items-start justify-content-end px-3\">\n          {selectedConversation.messages.map((message, index) => {\n            const lastMessage = selectedConversation.messages.length - 1 === index\n            return (\n              <div\n                ref={lastMessage ? setRef : null}\n                key={index}\n                className={`my-1 d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`}\n              >\n                <div\n                  className={`rounded px-2 py-1 `}\n                  style={{color:`${message.fromMe?meMsgText.color:oMsgText.color}`,background:`${message.fromMe?meMsgText.background:oMsgText.background}`}}>\n                  {message.text}\n                </div>\n                <div className={`small ${message.fromMe ? 'text-right' : ''}`} style={{color:oMsgText.color}}>\n                  {message.fromMe ? 'You' : message.senderName}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"m-2\">\n          <InputGroup>\n            <Form.Control\n              as=\"textarea\"\n              required\n              value={text}\n              onChange={e => setText(e.target.value)}\n              style={textStyling}\n            />\n            <InputGroup.Append>\n              <Button type=\"submit\" variant={`${darkMode?'danger':'primary'}`}>Send</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n","import React from 'react'\nimport Sidebar from './Sidebar';\nimport OpenConversation from './OpenConversation';\nimport { useConversations } from '../contexts/ConversationsProvider';\n\nexport default function Dashboard({ id,darkMode }) {\n  const { selectedConversation } = useConversations()\n\n  const bg={height: '93.5vh',background:`${darkMode?'url(\"https://wallpapercave.com/wp/wp8092590.jpg\")':'url(\"https://64.media.tumblr.com/53a35e7ed66f3159e01f3663af30706b/tumblr_ouztgbH0CG1vj8v9mo1_400.png\")'}`}\n\n  return (\n    <div className=\"d-flex\" style={bg}>\n      <Sidebar id={id} darkMode={darkMode} />\n      {selectedConversation && <OpenConversation darkMode={darkMode} />}\n    </div>\n  )\n}\n","import React,{useState} from 'react'\nimport Login from './Login'\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport Dashboard from './Dashboard'\nimport { ContactsProvider } from '../contexts/ContactsProvider'\nimport { ConversationsProvider } from '../contexts/ConversationsProvider';\nimport { SocketProvider } from '../contexts/SocketProvider';\nimport { Form} from 'react-bootstrap'\n\nfunction App() {\n  const [id, setId] = useLocalStorage('id')\n  const [darkMode,setDarkMode]=useState(false)\n\n  const dashboard = (\n    <SocketProvider id={id}>\n      <ContactsProvider>\n        <ConversationsProvider id={id}>\n          <Dashboard id={id} darkMode={darkMode} />\n        </ConversationsProvider>\n      </ContactsProvider>\n    </SocketProvider>\n  )\n  function handleClick(){\n    if(darkMode){\n      setDarkMode(false)\n    }else{\n      setDarkMode(true)\n    }\n  }\n\n  const ncolor={color:`${darkMode?'white':''}`,background:`${darkMode?'#272222':''}`,fontSize:'1.5rem',padding:'4px 2px 0px 4px'}\n\n  return (\n    <div>\n      <nav className=\"d-flex\" style={ncolor}>\n        <ul style={{marginBottom:'0.5rem'}}>\n          <li style={{listStyle:'none'}}>Talk-a-tive</li>\n        </ul>\n        <Form style={{marginLeft:'1200px',marginTop:'5px',fontSize:'20px'}}>\n          <Form.Check \n            type=\"switch\"\n            id=\"custom-switch\"\n            label=\"DarkMode\"\n            onClick={handleClick}\n          />\n       </Form>\n      </nav>\n    {id ? dashboard : <Login onIdSubmit={setId} darkMode={darkMode} />}\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}